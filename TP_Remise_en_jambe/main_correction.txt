import csv
import os
import requests
import xml.etree.ElementTree as ET

namespaces = {}

def register_all_namespaces(filename):
    for _, node in ET.iterparse(filename, events=['start-ns']):
      namespaces[node[0]] = node[1]
    for ns in namespaces:
        ET.register_namespace(ns, namespaces[ns])

def getWMTSCapabilities(url = "https://wxs.ign.fr/essentiels/geoportail/wmts?SERVICE=WMTS&REQUEST=GetCapabilities"):
  response = requests.get(url)
  if response.status_code != 200:
    return False
  
  with open("originalCapa.xml", "w") as file:
    file.writelines(response.text)

  register_all_namespaces("originalCapa.xml")
  capabilities = ET.parse("originalCapa.xml")
  os.remove("originalCapa.xml")
  return capabilities

def layersReader(filePath="layers.csv"):
  rows = []
  layercategories = []
  with open(filePath) as csvfile:
    reader = csv.DictReader(csvfile, delimiter=",")
    for row in reader:
      rows.append(row)
      if row["layercategory"] not in layercategories:
        layercategories.append(row["layercategory"])

  layers_by_category = {}
  for category in layercategories:
    layers_by_category[category] = []

    for row in rows:
      if row["layercategory"] != category:
        continue
      layers_by_category[category].append(row["layername"])

  return layers_by_category

def filterLayers(capabilities, layerList):
  root = capabilities.getroot()
  contents = root.find('Contents', namespaces)
  for layer in contents.findall('Layer', namespaces):
    identifier = layer.find('ows:Identifier', namespaces).text
    if identifier not in layerList:
      contents.remove(layer)


if __name__ == "__main__":
  capabilities = getWMTSCapabilities()
  layers = layersReader()["essentiels"]
  filterLayers(capabilities, layers)
  ET.indent(capabilities, space="  ", level=0)
  capabilities.write("essentiels.xml", encoding="utf-8")
